{
	"id": "0f437b12a6355b4052235cb38c8123ee",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SelfDestructExample.sol": {
				"content": "pragma solidity >= 0.7.0 < 0.9.0;\r\n\r\ncontract SelfDestruct {\r\n\r\n    address owner;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    receive () external payable {}\r\n\r\n    function destruct() external{\r\n        require(owner == msg.sender, \"Access restricted.\");\r\n        selfdestruct(payable(owner));\r\n\r\n    }\r\n\r\n    function checkOwner() public view returns (address) {\r\n        return msg.sender;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SelfDestructExample.sol": {
				"SelfDestruct": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "checkOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "destruct",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SelfDestructExample.sol\":37:424  contract SelfDestruct {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SelfDestructExample.sol\":90:141  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/SelfDestructExample.sol\":123:133  msg.sender */\n  caller\n    /* \"contracts/SelfDestructExample.sol\":115:120  owner */\n  0x00\n  dup1\n    /* \"contracts/SelfDestructExample.sol\":115:133  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SelfDestructExample.sol\":37:424  contract SelfDestruct {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SelfDestructExample.sol\":37:424  contract SelfDestruct {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2b68b9c6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xcdbce03d\n      eq\n      tag_4\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SelfDestructExample.sol\":187:325  function destruct() external{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/SelfDestructExample.sol\":333:421  function checkOwner() public view returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SelfDestructExample.sol\":187:325  function destruct() external{... */\n    tag_9:\n        /* \"contracts/SelfDestructExample.sol\":243:253  msg.sender */\n      caller\n        /* \"contracts/SelfDestructExample.sol\":234:253  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SelfDestructExample.sol\":234:239  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SelfDestructExample.sol\":234:253  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SelfDestructExample.sol\":226:276  require(owner == msg.sender, \"Access restricted.\") */\n      tag_16\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_17\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_16:\n        /* \"contracts/SelfDestructExample.sol\":308:313  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SelfDestructExample.sol\":287:315  selfdestruct(payable(owner)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"contracts/SelfDestructExample.sol\":333:421  function checkOwner() public view returns (address) {... */\n    tag_12:\n        /* \"contracts/SelfDestructExample.sol\":376:383  address */\n      0x00\n        /* \"contracts/SelfDestructExample.sol\":403:413  msg.sender */\n      caller\n        /* \"contracts/SelfDestructExample.sol\":396:413  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/SelfDestructExample.sol\":333:421  function checkOwner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_20:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_21:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_29\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_20\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_22:\n        /* \"#utility.yul\":328:352   */\n      tag_31\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_21\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_14:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_33\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_22\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:762   */\n    tag_23:\n        /* \"#utility.yul\":677:688   */\n      0x00\n        /* \"#utility.yul\":711:717   */\n      dup3\n        /* \"#utility.yul\":706:709   */\n      dup3\n        /* \"#utility.yul\":699:718   */\n      mstore\n        /* \"#utility.yul\":751:755   */\n      0x20\n        /* \"#utility.yul\":746:749   */\n      dup3\n        /* \"#utility.yul\":742:756   */\n      add\n        /* \"#utility.yul\":727:756   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":768:936   */\n    tag_24:\n        /* \"#utility.yul\":908:928   */\n      0x41636365737320726573747269637465642e0000000000000000000000000000\n        /* \"#utility.yul\":904:905   */\n      0x00\n        /* \"#utility.yul\":896:902   */\n      dup3\n        /* \"#utility.yul\":892:906   */\n      add\n        /* \"#utility.yul\":885:929   */\n      mstore\n        /* \"#utility.yul\":768:936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":942:1308   */\n    tag_25:\n        /* \"#utility.yul\":1084:1087   */\n      0x00\n        /* \"#utility.yul\":1105:1172   */\n      tag_37\n        /* \"#utility.yul\":1169:1171   */\n      0x12\n        /* \"#utility.yul\":1164:1167   */\n      dup4\n        /* \"#utility.yul\":1105:1172   */\n      tag_23\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1098:1172   */\n      swap2\n      pop\n        /* \"#utility.yul\":1181:1274   */\n      tag_38\n        /* \"#utility.yul\":1270:1273   */\n      dup3\n        /* \"#utility.yul\":1181:1274   */\n      tag_24\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1299:1301   */\n      0x20\n        /* \"#utility.yul\":1294:1297   */\n      dup3\n        /* \"#utility.yul\":1290:1302   */\n      add\n        /* \"#utility.yul\":1283:1302   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:1308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1314:1733   */\n    tag_18:\n        /* \"#utility.yul\":1480:1484   */\n      0x00\n        /* \"#utility.yul\":1518:1520   */\n      0x20\n        /* \"#utility.yul\":1507:1516   */\n      dup3\n        /* \"#utility.yul\":1503:1521   */\n      add\n        /* \"#utility.yul\":1495:1521   */\n      swap1\n      pop\n        /* \"#utility.yul\":1567:1576   */\n      dup2\n        /* \"#utility.yul\":1561:1565   */\n      dup2\n        /* \"#utility.yul\":1557:1577   */\n      sub\n        /* \"#utility.yul\":1553:1554   */\n      0x00\n        /* \"#utility.yul\":1542:1551   */\n      dup4\n        /* \"#utility.yul\":1538:1555   */\n      add\n        /* \"#utility.yul\":1531:1578   */\n      mstore\n        /* \"#utility.yul\":1595:1726   */\n      tag_40\n        /* \"#utility.yul\":1721:1725   */\n      dup2\n        /* \"#utility.yul\":1595:1726   */\n      tag_25\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1587:1726   */\n      swap1\n      pop\n        /* \"#utility.yul\":1314:1733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208647a20338cc138fd6836ff16bd6e43ae3aa49e20da978017399a44f0d7f80ce64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610259806100606000396000f3fe60806040526004361061002d5760003560e01c80632b68b9c614610039578063cdbce03d1461005057610034565b3661003457005b600080fd5b34801561004557600080fd5b5061004e61007b565b005b34801561005c57600080fd5b50610065610142565b604051610072919061018b565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610109576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010090610203565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101758261014a565b9050919050565b6101858161016a565b82525050565b60006020820190506101a0600083018461017c565b92915050565b600082825260208201905092915050565b7f41636365737320726573747269637465642e0000000000000000000000000000600082015250565b60006101ed6012836101a6565b91506101f8826101b7565b602082019050919050565b6000602082019050818103600083015261021c816101e0565b905091905056fea26469706673582212208647a20338cc138fd6836ff16bd6e43ae3aa49e20da978017399a44f0d7f80ce64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x259 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2B68B9C6 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xCDBCE03D EQ PUSH2 0x50 JUMPI PUSH2 0x34 JUMP JUMPDEST CALLDATASIZE PUSH2 0x34 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x7B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72 SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175 DUP3 PUSH2 0x14A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x185 DUP2 PUSH2 0x16A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41636365737320726573747269637465642E0000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED PUSH1 0x12 DUP4 PUSH2 0x1A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F8 DUP3 PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21C DUP2 PUSH2 0x1E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 SELFBALANCE LOG2 SUB CODESIZE 0xCC SGT DUP16 0xD6 DUP4 PUSH16 0xF16BD6E43AE3AA49E20DA978017399A4 0x4F 0xD PUSH32 0x80CE64736F6C6343000813003300000000000000000000000000000000000000 ",
							"sourceMap": "37:387:0:-:0;;;90:51;;;;;;;;;;123:10;115:5;;:18;;;;;;;;;;;;;;;;;;37:387;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkOwner_44": {
									"entryPoint": 322,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@destruct_35": {
									"entryPoint": 123,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_ebf73f4e3669605bd96dadbd40d51311b3caeb736603a9c5d955be8d88f553c6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73f4e3669605bd96dadbd40d51311b3caeb736603a9c5d955be8d88f553c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_ebf73f4e3669605bd96dadbd40d51311b3caeb736603a9c5d955be8d88f553c6": {
									"entryPoint": 439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1736:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "689:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "706:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "711:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "699:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "699:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "699:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "727:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "746:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "751:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "742:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "742:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "727:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "661:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "666:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "677:11:1",
														"type": ""
													}
												],
												"src": "593:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "874:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "896:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "904:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "892:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "892:14:1"
																	},
																	{
																		"hexValue": "41636365737320726573747269637465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "908:20:1",
																		"type": "",
																		"value": "Access restricted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "885:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "885:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "885:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73f4e3669605bd96dadbd40d51311b3caeb736603a9c5d955be8d88f553c6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "866:6:1",
														"type": ""
													}
												],
												"src": "768:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1088:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1098:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1164:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1169:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1105:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1105:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1098:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1270:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73f4e3669605bd96dadbd40d51311b3caeb736603a9c5d955be8d88f553c6",
																	"nodeType": "YulIdentifier",
																	"src": "1181:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1181:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1283:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1294:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1299:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1290:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1290:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1283:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73f4e3669605bd96dadbd40d51311b3caeb736603a9c5d955be8d88f553c6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1076:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1084:3:1",
														"type": ""
													}
												],
												"src": "942:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1485:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1495:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1507:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1518:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1503:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1503:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1495:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1542:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1553:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1538:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1538:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1561:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1567:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1557:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1557:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1531:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1587:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1721:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73f4e3669605bd96dadbd40d51311b3caeb736603a9c5d955be8d88f553c6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1595:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1595:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1587:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73f4e3669605bd96dadbd40d51311b3caeb736603a9c5d955be8d88f553c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1465:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1480:4:1",
														"type": ""
													}
												],
												"src": "1314:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73f4e3669605bd96dadbd40d51311b3caeb736603a9c5d955be8d88f553c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Access restricted.\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73f4e3669605bd96dadbd40d51311b3caeb736603a9c5d955be8d88f553c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_ebf73f4e3669605bd96dadbd40d51311b3caeb736603a9c5d955be8d88f553c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73f4e3669605bd96dadbd40d51311b3caeb736603a9c5d955be8d88f553c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73f4e3669605bd96dadbd40d51311b3caeb736603a9c5d955be8d88f553c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061002d5760003560e01c80632b68b9c614610039578063cdbce03d1461005057610034565b3661003457005b600080fd5b34801561004557600080fd5b5061004e61007b565b005b34801561005c57600080fd5b50610065610142565b604051610072919061018b565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610109576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010090610203565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101758261014a565b9050919050565b6101858161016a565b82525050565b60006020820190506101a0600083018461017c565b92915050565b600082825260208201905092915050565b7f41636365737320726573747269637465642e0000000000000000000000000000600082015250565b60006101ed6012836101a6565b91506101f8826101b7565b602082019050919050565b6000602082019050818103600083015261021c816101e0565b905091905056fea26469706673582212208647a20338cc138fd6836ff16bd6e43ae3aa49e20da978017399a44f0d7f80ce64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2B68B9C6 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xCDBCE03D EQ PUSH2 0x50 JUMPI PUSH2 0x34 JUMP JUMPDEST CALLDATASIZE PUSH2 0x34 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x7B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72 SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175 DUP3 PUSH2 0x14A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x185 DUP2 PUSH2 0x16A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41636365737320726573747269637465642E0000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED PUSH1 0x12 DUP4 PUSH2 0x1A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F8 DUP3 PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21C DUP2 PUSH2 0x1E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 SELFBALANCE LOG2 SUB CODESIZE 0xCC SGT DUP16 0xD6 DUP4 PUSH16 0xF16BD6E43AE3AA49E20DA978017399A4 0x4F 0xD PUSH32 0x80CE64736F6C6343000813003300000000000000000000000000000000000000 ",
							"sourceMap": "37:387:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;187:138;;;;;;;;;;;;;:::i;:::-;;333:88;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;187:138;243:10;234:19;;:5;;;;;;;;;;:19;;;226:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;308:5;;;;;;;;;;287:28;;;333:88;376:7;403:10;396:17;;333:88;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:169::-;677:11;711:6;706:3;699:19;751:4;746:3;742:14;727:29;;593:169;;;;:::o;768:168::-;908:20;904:1;896:6;892:14;885:44;768:168;:::o;942:366::-;1084:3;1105:67;1169:2;1164:3;1105:67;:::i;:::-;1098:74;;1181:93;1270:3;1181:93;:::i;:::-;1299:2;1294:3;1290:12;1283:19;;942:366;;;:::o;1314:419::-;1480:4;1518:2;1507:9;1503:18;1495:26;;1567:9;1561:4;1557:20;1553:1;1542:9;1538:17;1531:47;1595:131;1721:4;1595:131;:::i;:::-;1587:139;;1314:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "120200",
								"executionCost": "24431",
								"totalCost": "144631"
							},
							"external": {
								"checkOwner()": "385",
								"destruct()": "32022"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 37,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 37,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37,
									"end": 424,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 90,
									"end": 141,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 90,
									"end": 141,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 141,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 90,
									"end": 141,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 141,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 90,
									"end": 141,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 141,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 141,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 90,
									"end": 141,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 141,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 90,
									"end": 141,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 123,
									"end": 133,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 115,
									"end": 120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 115,
									"end": 133,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 115,
									"end": 133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 115,
									"end": 133,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 115,
									"end": 133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 115,
									"end": 133,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 115,
									"end": 133,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 115,
									"end": 133,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 115,
									"end": 133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 115,
									"end": 133,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 115,
									"end": 133,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 115,
									"end": 133,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 115,
									"end": 133,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 115,
									"end": 133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 115,
									"end": 133,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 115,
									"end": 133,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37,
									"end": 424,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37,
									"end": 424,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37,
									"end": 424,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37,
									"end": 424,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 37,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37,
									"end": 424,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208647a20338cc138fd6836ff16bd6e43ae3aa49e20da978017399a44f0d7f80ce64736f6c63430008130033",
									".code": [
										{
											"begin": 37,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 37,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37,
											"end": 424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37,
											"end": 424,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37,
											"end": 424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37,
											"end": 424,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 37,
											"end": 424,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "2B68B9C6"
										},
										{
											"begin": 37,
											"end": 424,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37,
											"end": 424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "CDBCE03D"
										},
										{
											"begin": 37,
											"end": 424,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37,
											"end": 424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37,
											"end": 424,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37,
											"end": 424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37,
											"end": 424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37,
											"end": 424,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 187,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 187,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 325,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 325,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 187,
											"end": 325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 325,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 187,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 187,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 187,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 187,
											"end": 325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 187,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 325,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 333,
											"end": 421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 333,
											"end": 421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 333,
											"end": 421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 333,
											"end": 421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 333,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 333,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 333,
											"end": 421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 333,
											"end": 421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 333,
											"end": 421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 333,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 333,
											"end": 421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 333,
											"end": 421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 187,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 187,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 243,
											"end": 253,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 234,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 234,
											"end": 253,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 234,
											"end": 239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 234,
											"end": 239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 234,
											"end": 239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 234,
											"end": 239,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 234,
											"end": 239,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 234,
											"end": 239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 234,
											"end": 239,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 234,
											"end": 239,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 234,
											"end": 239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 234,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 234,
											"end": 253,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 234,
											"end": 253,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 226,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 226,
											"end": 276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 226,
											"end": 276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 226,
											"end": 276,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 226,
											"end": 276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 226,
											"end": 276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 226,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 226,
											"end": 276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 226,
											"end": 276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 226,
											"end": 276,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 226,
											"end": 276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 226,
											"end": 276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 226,
											"end": 276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 276,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 226,
											"end": 276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 276,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 226,
											"end": 276,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 226,
											"end": 276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 308,
											"end": 313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 313,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 308,
											"end": 313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 313,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 308,
											"end": 313,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 308,
											"end": 313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 313,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 308,
											"end": 313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 308,
											"end": 313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 287,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 287,
											"end": 315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 287,
											"end": 315,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 333,
											"end": 421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 376,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 413,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 396,
											"end": 413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 593,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 706,
											"end": 709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 699,
											"end": 718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 751,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 746,
											"end": 749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 742,
											"end": 756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 727,
											"end": 756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 768,
											"end": 936,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 768,
											"end": 936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "41636365737320726573747269637465642E0000000000000000000000000000"
										},
										{
											"begin": 904,
											"end": 905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 892,
											"end": 906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 885,
											"end": 929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 768,
											"end": 936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 768,
											"end": 936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 942,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 942,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1169,
											"end": 1171,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1164,
											"end": 1167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1105,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1172,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1105,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1270,
											"end": 1273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1181,
											"end": 1274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1274,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1181,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1301,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1294,
											"end": 1297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 942,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 942,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 942,
											"end": 1308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 942,
											"end": 1308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1733,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1314,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1507,
											"end": 1516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1577,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1721,
											"end": 1725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1595,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1726,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1595,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/SelfDestructExample.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"checkOwner()": "cdbce03d",
							"destruct()": "2b68b9c6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"checkOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destruct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SelfDestructExample.sol\":\"SelfDestruct\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SelfDestructExample.sol\":{\"keccak256\":\"0xa8598f21dd5f8b7d17e9974ed3991cae7763bfc1e367f750376a18df35e9c893\",\"urls\":[\"bzz-raw://716c1db2dc99d8c9c56daf1170015aa36113a367a9f847e400b8a91fd779533e\",\"dweb:/ipfs/QmTSUUZRcHjEfK84kA1hhq1izVJELi4qp41vcBvpEKPfLc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/SelfDestructExample.sol:SelfDestruct",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/SelfDestructExample.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/SelfDestructExample.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5159",
				"formattedMessage": "Warning: \"selfdestruct\" has been deprecated. The underlying opcode will eventually undergo breaking changes, and its use is not recommended.\n  --> contracts/SelfDestructExample.sol:15:9:\n   |\n15 |         selfdestruct(payable(owner));\n   |         ^^^^^^^^^^^^\n\n",
				"message": "\"selfdestruct\" has been deprecated. The underlying opcode will eventually undergo breaking changes, and its use is not recommended.",
				"severity": "warning",
				"sourceLocation": {
					"end": 299,
					"file": "contracts/SelfDestructExample.sol",
					"start": 287
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/SelfDestructExample.sol": {
				"ast": {
					"absolutePath": "contracts/SelfDestructExample.sol",
					"exportedSymbols": {
						"SelfDestruct": [
							45
						]
					},
					"id": 46,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SelfDestruct",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "SelfDestruct",
							"nameLocation": "46:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "76:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 45,
									"src": "68:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "68:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "104:37:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "115:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "123:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "127:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "123:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "115:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "115:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "101:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "104:0:0"
									},
									"scope": 45,
									"src": "90:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "177:2:0",
										"statements": []
									},
									"id": 16,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "157:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "177:0:0"
									},
									"scope": 45,
									"src": "149:30:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "215:110:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "234:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 21,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "243:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "247:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "243:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "234:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41636365737320726573747269637465642e",
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "255:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73f4e3669605bd96dadbd40d51311b3caeb736603a9c5d955be8d88f553c6",
																"typeString": "literal_string \"Access restricted.\""
															},
															"value": "Access restricted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73f4e3669605bd96dadbd40d51311b3caeb736603a9c5d955be8d88f553c6",
																"typeString": "literal_string \"Access restricted.\""
															}
														],
														"id": 19,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "226:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "226:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "226:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 30,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "308:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "300:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 28,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "300:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "300:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 27,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "287:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "287:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "287:28:0"
											}
										]
									},
									"functionSelector": "2b68b9c6",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "destruct",
									"nameLocation": "196:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "204:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "215:0:0"
									},
									"scope": 45,
									"src": "187:138:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "385:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 40,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "403:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "407:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "403:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 39,
												"id": 42,
												"nodeType": "Return",
												"src": "396:17:0"
											}
										]
									},
									"functionSelector": "cdbce03d",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkOwner",
									"nameLocation": "342:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "376:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:9:0"
									},
									"scope": 45,
									"src": "333:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 46,
							"src": "37:387:0",
							"usedErrors": []
						}
					],
					"src": "0:424:0"
				},
				"id": 0
			}
		}
	}
}